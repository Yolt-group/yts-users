service:
  maintenance:
    url: http://localhost:${wiremock.server.port}/maintenance
  content:
    url: http://localhost:${wiremock.server.port}/content
  client-users:
    url: https://localhost:${wiremock.server.port}/client-users
  tokens:
    # private key coupled to the 'Yolt client' public key below. {"use":"sig","kty":"RSA","kid":"ce008ab6-f4d3-4649-853c-654830c98042","alg":"RS512","n":"sch9ANSm1StGWLqjXC9WAXSHTQ38lMpbpE6dvXFDUdNvULDZDImqCNF7xQ9pK9K_WndxcBjxD5G4YbiWy6m3ktOFH8fvrqELkJJAkA9z4YswCpSrE2gsxg46e4OD4MfNWogkMsRQffcKkpzpvpoiEyM1bEz6IqPfDj2Uch7XGOQjkpAAbfrc3KDtcNkeV16dNC0Hse2kkOYoWFvNZvHI1Rea_qlynJKkdjy1JckX8GOI4ZCkwoEdssaO57E6YTx76az6zJLkia7x29Z0uyNN2rz3FmJB2HjDAeELjEDKSMPRKrTLXKVvU0SrSTD6OlmTVHMhEwbWmhoLn3Fcz9AGhQ","e":"AQAB","d":"sCfQvIb4u9XCQV7FSS1aEd0Nx2rpb-DGRxrir3hP1P8kmBZzKjopsc0nz02CzzpmAlTBoOoFyYCA6ssFF84VqDVP_fqU4jqOg_R2Zof5MW1B7-n5TSR24NPuXL4maQ5wypiFDYx5mSa0Yit6bDK7Oq0zXRk07Cfld23K7fzi8rRMSL1CUHwwFvRXBHH_4mS65k3m5rBZIJ4MBxjDy5K_QMSjKA2Fh0KuZhaDZrJrqBEmkequAaRX61tEK-k150MGehtTIjgHUDx3NUhGm2l5zmohwyaWdSXliO8Nlfg5eLq2kQkjuol0-1P5umMNN1CqjSRG4wICR-Oc-B10HgKg4Q","p":"1dsvr7hikY0BwH3MpRti6URG-vPuKv_UByzTjF7ICeIRfMQriWfhpki032J0ksy1skhFgqU5oQy83IrV7aJvaJUJ4El1TV2fznq-W4ZBakHjlJ-qgWzm7CMbe-mj7-uBeFc3MndMCyvO0QDXBYg4dn9pYJrd3RO2HJvumecQ6V0","q":"1NF0y5NWoxvpwXvPdSMAozCt0vo_MtqmHcp7YQOoqhe1D6SsrxDe-BiHySiguBRiPhRa0-n7G164pC19FXsEi2FnLAqWaVePJHHWy4Rp5Z2uwYrnotqnZ6WybVhbS4cXCjLD0W_4jxATLVdVOwlZT3Ww014YFrnRXzlWSJsct0k","dp":"aBxB1dj824D7Blv34bU4bPlZWNih7PsInMmc32xRFEajXssdqtIQz2P78fg7ajAQkI-Qj26iZJ4P34oTZZG7jP1phnAclCJtJxcoTuRIOlODWJp2ZnW-4dyhh6yRq75KFGzZKU9cjN-x2pv_EelkG4Qhp-8c7YCoGrtq6C_OUt0","dq":"lPuYrtcTZJYq21dIUTFSxetTFIo5aellNx_DpZPBJGn6R9w5Q0klPjs1-52kfZlPeTQYrZd0QaHa0pxBn6MB-G0Uo-E5kL9KJvJGsyycUbFEYJtUM06suMNnmGKtbr9AYtRM_zZKpCRVuH0V3oFZ82Vph16ssGQe7XGfNK7ZuHk","qi":"uQWycI3z8_VkTlCstu3b-X3Y6g8gtAe3exm8rhXM8LCXliJ7GxC7KR9oGhuWiCvQT9FaC6nYhZtsgSIqrigiLmKFEToOnowxKGwRbBoyyCR9g0infI7J88qKeQxggiKskcngfG418pvdlAXbims8jMg6BKjJLFfKE7ihLwG1OCQ"}
    # use this to generate a test client-token in the tokens service (in a custom testcase in ClientTokenServiceTest)
    signature-jwks: "{\"keys\":[{\"use\":\"sig\",\"kty\":\"RSA\",\"kid\":\"4BA22E35-72ED-48FB-BEA1-B903325DAD23\",\"alg\":\"RS512\",\"n\":\"sC9Y_-u_K--e3mq1fpNSm4-3wQLKev-50zQZMrfHlg8hMpD9JQ1-nBX0WCjbEqJlD63Fi0uo22GOVwXyOPqPc09H_XQeeHZciM6OO-24CWpgT8AyNWWjUB-gKNdKDGvT_Orruer16Yo2UXTgQQbzShpIWX1qNds1q_DtUwVneXRjUgA1SFr4VnhYi-RKrTHZOQcp9h5zOzV9J1xUPjl5YNdkOdTotOB13cFgVKs8KW9zNiAEQW0woP_ry-PlB9mgAwzhnhYDPqGdR4xqAMkC1qRWFLKQdm1XOBEGw97ONLUpo3S2hudouR876vPy6rq2xvX3nT4d5x4GFBl4Ckwa-Q\",\"e\":\"AQAB\",\"p\":\"6sFm3eQXvI0paQIGgy2l3K-XFNuaNMnzsoPgN56oaBO-p-85QrT7sK1xN57xEI25RCxvsatNRs3ayjFHCPOAmJzsBfYOZuBhmgqxL77RFDc19P4nKTdufBX_RkIrCkVqXh8puA_E9hIjdGwCkkjyzPeIU6qjwaYEsbBn3AdD5Ic\",\"q\":\"wCEJud4g1oPCenuhfd7SdT0WW8Y-sf1E149ZspEA8i4GwqGY9PvzNN103NWc9qHHKgZrOEMV_Gh3WgcQctWpGhIdXN0w7HcuGvi8WC71wTQWPkdlehKETvFXGjJx6XAmmoQ5sjxa9yushVuNDZefPwspzdnugudq0rTRAlIfZH8\",\"dp\":\"AatSYe2HRa3zR23eQfyHG2ScPGe7VvjApNpPM9YK-IJ7bpJC4_iJeZ4iGfUlXarEUHnIaYkASaqZDasACE5C8dLb0scHHzAlQYUl8WL39Z7W4WEVQjPEs1kssYEy8SXBNd4e29Iw4lcKrX8_HW8rWs2_yGiENZJKokDQ3D2o--0\",\"dq\":\"Jk9wLQvJ6Hxlbx7v2LVxqccAilRBdCRYcdM3w49-bMwYtP6cDV2f5U6zWsWNgvBHUm3tO07FN4ttIRp_gSZxja1HBZllhAFPxDkM9ViH0HqeZNS_u1Ot5j_hamvcovul9vGev5ehW9_tirnyql8tddi4AUAPezLB7jn340qUz-k\",\"qi\":\"PZ-KFBw-y8VPGrrfCgD2ykVbejNwP_iWEncTnTqgCNwtt6nX7OEIZvXf9se_MO7xLHpOvBSgOw_R3pcynuiwpQMU-JxHmj7WRjPZg5hMDzpazzM0JpSpFU7hC2vTpd3zx9kJD-FYKCnRlekO5-xhz_TQupBisyED2K7FUSYfQFo\"},{\"use\":\"sig\",\"kty\":\"RSA\",\"kid\":\"ce008ab6-f4d3-4649-853c-654830c98042\",\"alg\":\"RS512\",\"n\":\"sch9ANSm1StGWLqjXC9WAXSHTQ38lMpbpE6dvXFDUdNvULDZDImqCNF7xQ9pK9K_WndxcBjxD5G4YbiWy6m3ktOFH8fvrqELkJJAkA9z4YswCpSrE2gsxg46e4OD4MfNWogkMsRQffcKkpzpvpoiEyM1bEz6IqPfDj2Uch7XGOQjkpAAbfrc3KDtcNkeV16dNC0Hse2kkOYoWFvNZvHI1Rea_qlynJKkdjy1JckX8GOI4ZCkwoEdssaO57E6YTx76az6zJLkia7x29Z0uyNN2rz3FmJB2HjDAeELjEDKSMPRKrTLXKVvU0SrSTD6OlmTVHMhEwbWmhoLn3Fcz9AGhQ\",\"e\":\"AQAB\"}]}"

yolt:
  app:
    urls:
      email-verification-url: https://www.yolt.com/email-verification-dev
  features: feat_foo, feat_bar
  kafka:
    broker:
      addresses: ${spring.embedded.kafka.brokers}
    topics:
      users:
        topic-name: users
        listener-concurrency: 1
      all-users-batch:
        topic-name: allUsersBatch
        listener-concurrency: 1
      webhooks:
        topic-name: webhooks
        listener-concurrency: 1
      offload-users:
        topic-name: offload_users
        listener-concurrency: 1
  vault:
    enabled: false
    secret:
      enabled: true
      location: classpath:/secrets

spring:
  cache:
    type: none
  datasource:
    username: runner
    password: runner
    url: jdbc:postgresql://127.0.0.1:5432/integration-test-db
  mvc:
    async:
      request-timeout: -1
  main:
    allow-bean-definition-overriding: true
  kafka:
    addresses: ${spring.embedded.kafka.brokers}
    bootstrap-servers: ${spring.embedded.kafka.brokers}
    consumer:
      group-id: "users"
      auto-offset-reset: earliest
isp:
  proxy:
    host: # Intentionally blank, allows wiremock tests to be written
    port:
management:
  endpoints:
    web:
      exposure:
        include: info, health, metrics, prometheus
      base-path: /users/actuator
  server:
    port: 8888
    ssl:
      enabled: false
logging:
  level:
    ROOT: INFO
